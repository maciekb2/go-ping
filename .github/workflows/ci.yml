name: Go CI & Docker Build to GCP

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: GCP_SA_KEY
    env:
      GCR_JSON_KEY: ${{ secrets.GCR_JSON_KEY }}

    steps:
    - name: Checkout repozytorium
      uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ${{ env.GOPATH }}/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Pobierz zależności
      run: go mod download

    - name: Uruchom testy
      run: go test ./...

    - name: Zbuduj aplikację
      run: go build -o go-ping .

    - name: Zbuduj obraz Dockerowy
      run: docker build -t go-ping:latest .

    - name: Logowanie do Google Container Registry (GCR)
      run: echo "${{ secrets.GCP_SA_KEY }}" | docker login -u _json_key --password-stdin https://gcr.io

    - name: Tagowanie obrazu dla GCR
      run: docker tag go-ping:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/go-ping:latest

    - name: Wypchnięcie obrazu do GCR
      run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/go-ping:latest

    - name: Zapisz obraz Dockerowy jako artefakt
      run: docker save gcr.io/${{ secrets.GCP_PROJECT_ID }}/go-ping:latest > go-ping.tar

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: go-ping.tar
